{"ast":null,"code":"var _jsxFileName = \"F:\\\\PAF_new\\\\PAF_SL\\\\skillSharingAndLearningPlatform\\\\frontend\\\\src\\\\components\\\\comments\\\\CommentItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { FaReply, FaEdit, FaTrash } from 'react-icons/fa';\nimport CommentForm from './CommentForm';\nimport commentService from '../../services/commentService';\nimport './CommentItem.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentItem = ({\n  comment,\n  postId,\n  onCommentUpdated\n}) => {\n  _s();\n  const [showReplyForm, setShowReplyForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  // For demo purpose, always allow edit/delete\n  // In a real app, use proper authentication\n  const currentUserId = \"user123\"; // localStorage.getItem('userId');\n\n  // Use currentUserId in the comparison, but for demo purposes, always return true\n  // In a real app, you would use: currentUserId === comment.userId\n  const isCommentOwner = true; // This is for demo. In production: currentUserId === comment.userId\n\n  // Alternative: Add eslint-disable comment\n  // eslint-disable-next-line no-unused-vars\n  const actualOwnerCheck = currentUserId === comment.userId; // This shows how it would be implemented for real\n\n  const handleReply = () => {\n    setShowReplyForm(!showReplyForm);\n    setShowEditForm(false);\n  };\n  const handleEdit = () => {\n    setShowEditForm(!showEditForm);\n    setShowReplyForm(false);\n  };\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this comment?')) {\n      setIsDeleting(true);\n      try {\n        await commentService.deleteComment(comment.id);\n        onCommentUpdated();\n      } catch (error) {\n        console.error('Error deleting comment:', error);\n        alert('Failed to delete comment. Please try again.');\n      } finally {\n        setIsDeleting(false);\n      }\n    }\n  };\n  const handleCommentAdded = () => {\n    setShowReplyForm(false);\n    onCommentUpdated();\n  };\n  const handleCommentUpdated = () => {\n    setShowEditForm(false);\n    onCommentUpdated();\n  };\n\n  // Format date safely\n  const formatDate = dateString => {\n    if (!dateString) return 'Unknown date';\n    try {\n      return moment(dateString).fromNow();\n    } catch (e) {\n      return 'Invalid date';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-username\",\n          children: comment.username || 'Anonymous'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-time\",\n          children: formatDate(comment.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handleReply,\n          children: [/*#__PURE__*/_jsxDEV(FaReply, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), \" Reply\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), isCommentOwner && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            onClick: handleEdit,\n            children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), \" Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button delete\",\n            onClick: handleDelete,\n            disabled: isDeleting,\n            children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), \" \", isDeleting ? 'Deleting...' : 'Delete']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), !showEditForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-content\",\n      children: comment.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CommentForm, {\n      postId: postId,\n      commentId: comment.id,\n      initialValue: comment.content,\n      onCommentAdded: handleCommentUpdated,\n      isEdit: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), showReplyForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reply-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"reply-notification\",\n        children: [\"Your reply will notify \", comment.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        postId: postId,\n        parentId: comment.id,\n        onCommentAdded: handleCommentAdded,\n        isReply: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), comment.replies && comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-replies\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"replies-header\",\n        children: [\"Replies (\", comment.replies.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), comment.replies.map(reply => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: reply,\n        postId: postId,\n        onCommentUpdated: onCommentUpdated\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentItem, \"LUlY8gGxUfpMixqLPi4D6KF8wQY=\");\n_c = CommentItem;\nexport default CommentItem;\nvar _c;\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"names":["React","useState","moment","FaReply","FaEdit","FaTrash","CommentForm","commentService","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentItem","comment","postId","onCommentUpdated","_s","showReplyForm","setShowReplyForm","showEditForm","setShowEditForm","isDeleting","setIsDeleting","currentUserId","isCommentOwner","actualOwnerCheck","userId","handleReply","handleEdit","handleDelete","window","confirm","deleteComment","id","error","console","alert","handleCommentAdded","handleCommentUpdated","formatDate","dateString","fromNow","e","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","createdAt","onClick","disabled","content","commentId","initialValue","onCommentAdded","isEdit","parentId","isReply","replies","length","map","reply","_c","$RefreshReg$"],"sources":["F:/PAF_new/PAF_SL/skillSharingAndLearningPlatform/frontend/src/components/comments/CommentItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { FaReply, FaEdit, FaTrash } from 'react-icons/fa';\r\nimport CommentForm from './CommentForm';\r\nimport commentService from '../../services/commentService';\r\nimport './CommentItem.css';\r\n\r\nconst CommentItem = ({ comment, postId, onCommentUpdated }) => {\r\n  const [showReplyForm, setShowReplyForm] = useState(false);\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  \r\n  // For demo purpose, always allow edit/delete\r\n  // In a real app, use proper authentication\r\n  const currentUserId = \"user123\"; // localStorage.getItem('userId');\r\n  \r\n  // Use currentUserId in the comparison, but for demo purposes, always return true\r\n  // In a real app, you would use: currentUserId === comment.userId\r\n  const isCommentOwner = true; // This is for demo. In production: currentUserId === comment.userId\r\n  \r\n  // Alternative: Add eslint-disable comment\r\n  // eslint-disable-next-line no-unused-vars\r\n  const actualOwnerCheck = currentUserId === comment.userId; // This shows how it would be implemented for real\r\n\r\n  const handleReply = () => {\r\n    setShowReplyForm(!showReplyForm);\r\n    setShowEditForm(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setShowEditForm(!showEditForm);\r\n    setShowReplyForm(false);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (window.confirm('Are you sure you want to delete this comment?')) {\r\n      setIsDeleting(true);\r\n      try {\r\n        await commentService.deleteComment(comment.id);\r\n        onCommentUpdated();\r\n      } catch (error) {\r\n        console.error('Error deleting comment:', error);\r\n        alert('Failed to delete comment. Please try again.');\r\n      } finally {\r\n        setIsDeleting(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCommentAdded = () => {\r\n    setShowReplyForm(false);\r\n    onCommentUpdated();\r\n  };\r\n\r\n  const handleCommentUpdated = () => {\r\n    setShowEditForm(false);\r\n    onCommentUpdated();\r\n  };\r\n\r\n  // Format date safely\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Unknown date';\r\n    try {\r\n      return moment(dateString).fromNow();\r\n    } catch (e) {\r\n      return 'Invalid date';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-item\">\r\n      <div className=\"comment-header\">\r\n        <div className=\"comment-user-info\">\r\n          <span className=\"comment-username\">{comment.username || 'Anonymous'}</span>\r\n          <span className=\"comment-time\">{formatDate(comment.createdAt)}</span>\r\n        </div>\r\n        <div className=\"comment-actions\">\r\n          <button className=\"action-button\" onClick={handleReply}>\r\n            <FaReply /> Reply\r\n          </button>\r\n          {isCommentOwner && (\r\n            <>\r\n              <button className=\"action-button\" onClick={handleEdit}>\r\n                <FaEdit /> Edit\r\n              </button>\r\n              <button \r\n                className=\"action-button delete\" \r\n                onClick={handleDelete}\r\n                disabled={isDeleting}\r\n              >\r\n                <FaTrash /> {isDeleting ? 'Deleting...' : 'Delete'}\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {!showEditForm ? (\r\n        <div className=\"comment-content\">{comment.content}</div>\r\n      ) : (\r\n        <CommentForm \r\n          postId={postId} \r\n          commentId={comment.id} \r\n          initialValue={comment.content}\r\n          onCommentAdded={handleCommentUpdated}\r\n          isEdit={true}\r\n        />\r\n      )}\r\n      \r\n      {showReplyForm && (\r\n        <div className=\"reply-form-container\">\r\n          <p className=\"reply-notification\">Your reply will notify {comment.username}</p>\r\n          <CommentForm \r\n            postId={postId} \r\n            parentId={comment.id}\r\n            onCommentAdded={handleCommentAdded}\r\n            isReply={true}\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {comment.replies && comment.replies.length > 0 && (\r\n        <div className=\"comment-replies\">\r\n          <div className=\"replies-header\">Replies ({comment.replies.length})</div>\r\n          {comment.replies.map(reply => (\r\n            <CommentItem \r\n              key={reply.id} \r\n              comment={reply} \r\n              postId={postId}\r\n              onCommentUpdated={onCommentUpdated}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}