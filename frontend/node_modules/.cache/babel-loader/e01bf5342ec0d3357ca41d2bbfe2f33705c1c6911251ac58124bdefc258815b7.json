{"ast":null,"code":"import api from './api';\nconst notificationService = {\n  getUserNotifications: (type = null) => {\n    if (type) {\n      return api.get(`/notifications?type=${type}`);\n    }\n    return api.get('/notifications');\n  },\n  markAsRead: notificationId => {\n    return api.post(`/notifications/${notificationId}/read`);\n  },\n  markAllAsRead: () => {\n    return api.post('/notifications/read-all');\n  },\n  getUnreadCount: () => {\n    return api.get('/notifications/unread-count');\n  },\n  getUnreadNotifications: () => {\n    return api.get('/notifications/unread');\n  },\n  getLikeNotifications: () => {\n    return api.get('/notifications?type=LIKE');\n  },\n  getCommentNotifications: () => {\n    return api.get('/notifications?type=COMMENT,REPLY');\n  },\n  // Get self action notifications\n  getSelfNotifications: () => {\n    return api.get('/notifications?type=SELF_LIKE,SELF_COMMENT,SELF_REPLY');\n  },\n  // For demo purposes - create a test notification\n  createTestNotification: (type = 'COMMENT') => {\n    return api.post('/notifications/test', {\n      type\n    });\n  },\n  // For demo purposes - create a self notification\n  createSelfNotification: (type = 'SELF_COMMENT') => {\n    return api.post('/notifications/test-self-notification', {\n      type\n    });\n  }\n};\nexport default notificationService;","map":{"version":3,"names":["api","notificationService","getUserNotifications","type","get","markAsRead","notificationId","post","markAllAsRead","getUnreadCount","getUnreadNotifications","getLikeNotifications","getCommentNotifications","getSelfNotifications","createTestNotification","createSelfNotification"],"sources":["F:/PAF_new/PAF_SL/skillSharingAndLearningPlatform/frontend/src/services/notificationService.js"],"sourcesContent":["import api from './api';\r\n\r\nconst notificationService = {\r\n  getUserNotifications: (type = null) => {\r\n    if (type) {\r\n      return api.get(`/notifications?type=${type}`);\r\n    }\r\n    return api.get('/notifications');\r\n  },\r\n  \r\n  markAsRead: (notificationId) => {\r\n    return api.post(`/notifications/${notificationId}/read`);\r\n  },\r\n  \r\n  markAllAsRead: () => {\r\n    return api.post('/notifications/read-all');\r\n  },\r\n  \r\n  getUnreadCount: () => {\r\n    return api.get('/notifications/unread-count');\r\n  },\r\n  \r\n  getUnreadNotifications: () => {\r\n    return api.get('/notifications/unread');\r\n  },\r\n  \r\n  getLikeNotifications: () => {\r\n    return api.get('/notifications?type=LIKE');\r\n  },\r\n  \r\n  getCommentNotifications: () => {\r\n    return api.get('/notifications?type=COMMENT,REPLY');\r\n  },\r\n\r\n  // Get self action notifications\r\n  getSelfNotifications: () => {\r\n    return api.get('/notifications?type=SELF_LIKE,SELF_COMMENT,SELF_REPLY');\r\n  },\r\n\r\n  // For demo purposes - create a test notification\r\n  createTestNotification: (type = 'COMMENT') => {\r\n    return api.post('/notifications/test', { type });\r\n  },\r\n\r\n  // For demo purposes - create a self notification\r\n  createSelfNotification: (type = 'SELF_COMMENT') => {\r\n    return api.post('/notifications/test-self-notification', { type });\r\n  }\r\n};\r\n\r\nexport default notificationService;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,mBAAmB,GAAG;EAC1BC,oBAAoB,EAAEA,CAACC,IAAI,GAAG,IAAI,KAAK;IACrC,IAAIA,IAAI,EAAE;MACR,OAAOH,GAAG,CAACI,GAAG,CAAC,uBAAuBD,IAAI,EAAE,CAAC;IAC/C;IACA,OAAOH,GAAG,CAACI,GAAG,CAAC,gBAAgB,CAAC;EAClC,CAAC;EAEDC,UAAU,EAAGC,cAAc,IAAK;IAC9B,OAAON,GAAG,CAACO,IAAI,CAAC,kBAAkBD,cAAc,OAAO,CAAC;EAC1D,CAAC;EAEDE,aAAa,EAAEA,CAAA,KAAM;IACnB,OAAOR,GAAG,CAACO,IAAI,CAAC,yBAAyB,CAAC;EAC5C,CAAC;EAEDE,cAAc,EAAEA,CAAA,KAAM;IACpB,OAAOT,GAAG,CAACI,GAAG,CAAC,6BAA6B,CAAC;EAC/C,CAAC;EAEDM,sBAAsB,EAAEA,CAAA,KAAM;IAC5B,OAAOV,GAAG,CAACI,GAAG,CAAC,uBAAuB,CAAC;EACzC,CAAC;EAEDO,oBAAoB,EAAEA,CAAA,KAAM;IAC1B,OAAOX,GAAG,CAACI,GAAG,CAAC,0BAA0B,CAAC;EAC5C,CAAC;EAEDQ,uBAAuB,EAAEA,CAAA,KAAM;IAC7B,OAAOZ,GAAG,CAACI,GAAG,CAAC,mCAAmC,CAAC;EACrD,CAAC;EAED;EACAS,oBAAoB,EAAEA,CAAA,KAAM;IAC1B,OAAOb,GAAG,CAACI,GAAG,CAAC,uDAAuD,CAAC;EACzE,CAAC;EAED;EACAU,sBAAsB,EAAEA,CAACX,IAAI,GAAG,SAAS,KAAK;IAC5C,OAAOH,GAAG,CAACO,IAAI,CAAC,qBAAqB,EAAE;MAAEJ;IAAK,CAAC,CAAC;EAClD,CAAC;EAED;EACAY,sBAAsB,EAAEA,CAACZ,IAAI,GAAG,cAAc,KAAK;IACjD,OAAOH,GAAG,CAACO,IAAI,CAAC,uCAAuC,EAAE;MAAEJ;IAAK,CAAC,CAAC;EACpE;AACF,CAAC;AAED,eAAeF,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}